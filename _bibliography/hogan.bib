
@inproceedings{hogan_cs0_2023,
	address = {Toronto ON Canada},
	selected={true},
	abstract={Previous research has been devoted to improving the experience of non-majors in introductory CS courses. In this study, we compare the experiences of non-majors in two different introductory CS courses, specifically with respect to fears about taking the course and change in confidence levels. CS0 is a computing course intentionally designed for non-majors, and CS1 is a more traditional introductory computing course. Both of these courses were composed primarily of non-majors and were taught by the same instructor. Survey data was collected from 124 students enrolled in CS0, and 502 students enrolled in CS1. Through qualitative analysis, we found that the fears of non-major students entering both of these introductory CS courses fell into one or more of nine distinct categories (e.g., Coding, Perceiving STEM as Difficult, Managing Workload). Additionally, using students' confidence levels at the beginning and end of the courses, we found that students in CS0 had a greater increase in confidence level than those in CS1. Finally, we explored connections between students' fears and how their confidence changed by the end of the course. We found that students across both courses with fears related to coding, lack of preparation, and being left behind had the highest average increase in confidence levels.},
	html={https://dl.acm.org/doi/10.1145/3545945.3569865},
	pdf={Hogan et al. - 2023 - CS0 vs. CS1 Understanding Fears and Confidence a.pdf},
	title = {{CS0} vs. {CS1}:: {Understanding} {Fears} and {Confidence} amongst {Non}-majors in {Introductory} {CS} {Courses}},
	isbn = {978-1-4503-9431-4},
	shorttitle = {{CS0} vs. {CS1}},
	url = {https://dl.acm.org/doi/10.1145/3545945.3569865},
	doi = {10.1145/3545945.3569865},
	language = {en},
	urldate = {2024-01-25},
	booktitle = {Proceedings of the 54th {ACM} {Technical} {Symposium} on {Computer} {Science} {Education} {V}. 1},
	publisher = {ACM},
	author = {Hogan, Emma and Li, Ruoxuan and Soosai Raj, Adalbert Gerald},
	month = mar,
	year = {2023},
	pages = {25--31},
	file = {Full Text PDF:/Users/emmahogan/Zotero/storage/FYEJPL2S/Hogan et al. - 2023 - CS0 vs. CS1 Understanding Fears and Confidence a.pdf:application/pdf},
}

@inproceedings{shah_empirical_2023,
	address = {Chicago IL USA},
	title = {An {Empirical} {Evaluation} of {Live} {Coding} in {CS1}},
	isbn = {978-1-4503-9976-0},
	abstract = {Background and Context. Live coding is a teaching method in which an instructor dynamically writes code in front of students in an effort to impart skills such as incremental development and debugging. By contrast, traditional, static-code examples typically involve an instructor annotating or explaining components of pre-written code. Despite recommendations to use live coding and a wealth of qualitative analyses that identify perceived learning benefits of it, there are a lack of empirical evaluations to confirm those learning benefits, especially with respect to students' programming processes. Objectives. Our work aims to provide a holistic, empirical comparison of a live-coding pedagogy with a static-code one. We evaluated the impact of a live-coding pedagogy on three main areas: 1) students’ adherence to effective programming processes, 2) their performance on exams and assignments, and 3) their lecture experiences, such as engagement during lecture and perceptions of code examples. Method. In our treatment-control quasi-experimental setup, one lecture group saw live-coding examples while the other saw only static-code ones. Both lecture groups were taught by the same instructor, were taught the exact same content, and completed the same assignments and exams. We collected compilation-level programming process data, student performance on exam and homework questions, and feedback via a survey and course evaluations. Findings. Our findings showed no statistically significant differences between the live-coding and static-code groups on programming process metrics related to incremental development, debugging, and productivity. Similarly, there was no difference between the groups on course performance on assignments and exams. Finally, student feedback suggests that more students in the live-coding group reported that lectures were too fast and failed to facilitate note-taking, potentially mitigating the perceived benefits of live coding. Implications. Live coding alone may not lead to many of the perceived and intended benefits that prior work identifies, but future work may investigate how to realize these benefits while minimizing the drawbacks we identified.},
	language = {en},
	urldate = {2024-01-25},
	booktitle = {Proceedings of the 2023 {ACM} {Conference} on {International} {Computing} {Education} {Research} {V}.1},
	publisher = {ACM},
	author = {Shah, Anshul and Hogan, Emma and Agarwal, Vardhan and Driscoll, John and Porter, Leo and Griswold, William G. and Soosai Raj, Adalbert Gerald},
	month = aug,
	year = {2023},
	pages = {476--494},
	file = {Full Text PDF:/Users/emmahogan/Zotero/storage/C4KS5BAW/Shah et al. - 2023 - An Empirical Evaluation of Live Coding in CS1.pdf:application/pdf},
	html = {https://dl.acm.org/doi/10.1145/3568813.3600122},
	doi = {10.1145/3568813.3600122},
	language = {en},
	urldate = {2024-01-25},
	booktitle = {Proceedings of the 2023 {ACM} {Conference} on {International} {Computing} {Education} {Research} {V}.1},
	publisher = {ACM},
	author = {Shah, Anshul and Hogan, Emma and Agarwal, Vardhan and Driscoll, John and Porter, Leo and Griswold, William G. and Soosai Raj, Adalbert Gerald},
	month = aug,
	year = {2023},
	pages = {476--494},
	file = {Full Text PDF:/Users/emmahogan/Zotero/storage/C4KS5BAW/Shah et al. - 2023 - An Empirical Evaluation of Live Coding in CS1.pdf:application/pdf},
}

@inproceedings{shah_impact_2023,
	address = {Turku Finland},
	title = {The {Impact} of a {Remote} {Live}-{Coding} {Pedagogy} on {Student} {Programming} {Processes}, {Grades}, and {Lecture} {Questions} {Asked}},
	isbn = {9798400701382},
	html = {https://dl.acm.org/doi/10.1145/3587102.3588846},
	doi = {10.1145/3587102.3588846},
	language = {en},
	urldate = {2024-01-25},
	abstract = {Live coding---a pedagogical technique in which an instructor plans, writes, and executes code in front of a class---is generally considered a best practice when teaching programming. However, only a few studies have evaluated the effect of live coding on student learning in a controlled experiment and most of the literature relating to live coding identifies students' perceived benefits of live-coding examples. In order to empirically evaluate the impact of live coding, we designed a controlled experiment in a CS1 course taught in Python at a large public university. In the two remote lecture sections for the course, one was taught using live-coding examples and the other was taught using static-code examples. Throughout the term, we collected code snapshots from students' programming assignments, students' grades, and the questions that they asked during the remote lectures. We then applied a set of process-oriented programming metrics to students' programming data to compare students' adherence to effective programming processes in the two learning groups and categorized each question asked in lectures following an open-coding approach. Our results revealed a general lack of difference between the two groups across programming processes, grades, and lecture questions asked. However, our experiment uncovered minimal effects in favor of the live-coding group indicating improved programming processes but lower performance on assignments and grades. Our results suggest an overall insignificant impact of the style of presenting code examples, though we reflect on the threats to validity in our study that should be addressed in future work.},
	booktitle = {Proceedings of the 2023 {Conference} on {Innovation} and {Technology} in {Computer} {Science} {Education} {V}. 1},
	publisher = {ACM},
	author = {Shah, Anshul and Agarwal, Vardhan and Granado, Michael and Driscoll, John and Hogan, Emma and Porter, Leo and Griswold, William and Soosai Raj, Adalbert Gerald},
	month = jun,
	year = {2023},
	pages = {533--539},
	file = {Full Text PDF:/Users/emmahogan/Zotero/storage/WG7UHI75/Shah et al. - 2023 - The Impact of a Remote Live-Coding Pedagogy on Stu.pdf:application/pdf},
}

@inproceedings{sharma_engagement_2023,
	address = {Chicago IL USA},
	title = {Engagement and {Anonymity} in {Online} {Computer} {Science} {Course} {Forums}},
	isbn = {978-1-4503-9976-0},
	html = {https://dl.acm.org/doi/10.1145/3568813.3600121},
	doi = {10.1145/3568813.3600121},
	abstract = {Online discussion boards, designed to facilitate learning from peers and instructors in an accessible space, are a vital part of course design, especially in large scale computer science classes. Previous work has shown that women in computer science tend to use anonymity more often than men on these boards, a trend not found in humanities, social science or business courses. In this work, we build on these findings using an intersectional lens, analyzing both gender and race/ethnicity. We find this combined analysis reveals differences in anonymity that are not apparent when examining gender alone. For example, we find a significantly greater difference in anonymity use between Hispanic men and women than would be expected from analyzing race/ethnicity and gender independently. We additionally analyze type of content (e.g., questions, answers), course, platform, and data source to characterize the many factors at play in measuring students’ choice to participate anonymously. In doing so, we show that different approaches used in prior work for eliciting information on gender — whether using registrar data, a survey, or imputing gender based on name — changes how over 20\% of students are classified, particularly affecting nonbinary students and Asian students. Understanding when students participate anonymously can help educators and platform designers to make students’ experience of online discussion boards more welcoming.},
	language = {en},
	urldate = {2024-01-25},
	booktitle = {Proceedings of the 2023 {ACM} {Conference} on {International} {Computing} {Education} {Research} {V}.1},
	publisher = {ACM},
	author = {Sharma, Mrinal and McTavish, Hayden and Peng, Zimo and Shah, Anshul and Agarwal, Vardhan and Sih, Caroline and Hogan, Emma and Molina, Ismael Villegas and Raj, Adalbert Gerald Soosai and Vaccaro, Kristen},
	month = aug,
	year = {2023},
	pages = {48--62},
	file = {Sharma et al. - 2023 - Engagement and Anonymity in Online Computer Scienc.pdf:/Users/emmahogan/Zotero/storage/ZS4SEZGK/Sharma et al. - 2023 - Engagement and Anonymity in Online Computer Scienc.pdf:application/pdf},
}

@phdthesis{hogan_role_2021,
	type = {Undergraduate {Honors} {Thesis}},
	selected={true},
	html={https://cdm15739.contentdm.oclc.org/digital/collection/p15739coll1/id/337/rec/1},
	title = {The {Role} of {Technology} in {Supporting} the {Learning} {Needs} of {All} {Levels} of {Incarcerated} {Students}: {A} {Supplement}, not a {Replacement}},
	url = {https://cdm15739.contentdm.oclc.org/digital/collection/p15739coll1/id/337/rec/1},
	abstract = {This research contributes to answering this question of how to improve correctional
education by defining the role of technology in its ideal implementation, in order to maximize
the impact of education for as many incarcerated learners as possible. In Part I, I detail the
survey conducted in Albany County Jail to support this research with the primary source of
perspectives from currently incarcerated learners. From that point forward, first-hand accounts
from these individuals are spread throughout the paper (indicated with italics and block quotes at
the beginnings of sections to which they apply) in order to situate all of the points I make within
the context of the lives this work intends to serve. Part II focuses on current policy related to
correctional education, grounding my arguments in the reality of what the law does and does not
require and how this dictates the current state of education in prisons and jails. In Part III, I
identify the specific learning needs of the incarcerated population. Part IV assesses how the
current state of correctional education fails to meet these needs, and particularly the limitations
of technology in its current implementation. My research culminates in Part V with
recommendations on the role technology should have in the future of correctional education.},
	language = {en},
	urldate = {2024-01-25},
	school = {Siena College},
	author = {Hogan, Emma},
	year = {2021},
	file = {Snapshot:/Users/emmahogan/Zotero/storage/ERLCV25Z/1.html:text/html},
}
@misc{hogan_opinion_2021,
	title = {{OPINION}: {Washington}’s {DOC} {Is} {Trapping} {Incarcerated} {Men} in {Solitary} {Confinement}},
	shorttitle = {{OPINION}},
	html = {https://southseattleemerald.com/2021/07/28/opinion-washingtons-doc-is-trapping-incarcerated-men-in-solitary-confinement/},
	language = {en-US},
	urldate = {2024-01-25},
	journal = {South Seattle Emerald},
	author = {Hogan, Emma and Bolotin, Hannah},
	month = jul,
	year = {2021},
	file = {Snapshot:/Users/emmahogan/Zotero/storage/FWD7LZ92/opinion-washingtons-doc-is-trapping-incarcerated-men-in-solitary-confinement.html:text/html},
}

@misc{hogan_locked_2021,
	title = {Locked out of life-saving education programs},
	html = {https://www.postprisonedu.org/blog/eduaccess},
	abstract = {Front facing, on their letterhead and websites, the Washington State Department of Corrections and legislature verbalize what they believe the voting public wants to read and hear.\&nbsp; However, behind closed doors, in caucus, in action, in reality, they are locking prisoners out of educational},
	language = {en-US},
	urldate = {2024-01-25},
	journal = {Post-Prison Education Program},
	author = {Hogan, Emma and Bolotin, Hannah},
	month = jul,
	year = {2021},
	file = {Snapshot:/Users/emmahogan/Zotero/storage/JVB5GRBR/eduaccess.html:text/html},
}

@preprint{cuevas_observations_2022,
	title = {Observations {From} an {Online} {Security} {Competition} and {Its} {Implications} on {Crowdsourced} {Security}},
	url = {http://arxiv.org/abs/2204.12601},
	abstract = {The crowd sourced security industry, particularly bug bounty programs, has grown dramatically over the past years and has become the main source of software security reviews for many companies. However, the academic literature has largely omitted security teams, particularly in crowd work contexts. As such, we know very little about how distributed security teams organize, collaborate, and what technology needs they have. We fill this gap by conducting focus groups with the top five teams (out of 18,201 participating teams) of a computer security Capture-the-Flag (CTF) competition. We find that these teams adopted a set of strategies centered on specialties, which allowed them to reduce issues relating to dispersion, double work, and lack of previous collaboration. Observing the current issues of a model centered on individual workers in security crowd work platforms, our study cases that scaling security work to teams is feasible and beneficial. Finally, we identify various areas which warrant future work, such as issues of social identity in high-skilled crowd work environments.},
	urldate = {2024-01-25},
	publisher = {arXiv},
	author = {Cuevas, Alejandro and Hogan, Emma and Hibshi, Hanan and Christin, Nicolas},
	month = apr,
	arxiv = {2204.12601},
	year = {2022},
	note = {arXiv:2204.12601 [cs]},
	keywords = {Computer Science - Cryptography and Security, Computer Science - Human-Computer Interaction},
	annote = {Comment: 13 pages, 1 figure, 1 table},
	file = {arXiv.org Snapshot:/Users/emmahogan/Zotero/storage/DUELRLG5/2204.html:text/html;Full Text PDF:/Users/emmahogan/Zotero/storage/8URJYJCJ/Cuevas et al. - 2022 - Observations From an Online Security Competition a.pdf:application/pdf},
}

@presentation{hogan_uncovering_2024,
	address = {University of California, San Diego},
	type = {poster},
	title = {Uncovering {Meaningful} {Computing} {Contexts} for {Incarcerated} {College} {Students}},
	abstract = {Higher education is expanding in United States prisons, with a growing demand for STEM offerings. Academics from other disciplines have stressed the importance of culturally relevant pedagogy (CRP) in prison higher education, and computing in context has
shown major benefits in CS1— especially for women and nontraditional students. More work is needed to determine what contexts are relevant to incarcerated college students, and how to incorporate these into computing curricula. In this paper, we build on prior work on computing in context and culturally relevant techniques in computing. We analyze course data from a CS1 course
taught in a college-in-prison program to answer the following research question: What contexts do incarcerated students in CS1 find relevant? We identify 24 topics pursued by students across 78
open-ended programming assignment submissions, the three most popular being business management, sports statistics, and physical health. These results offer insight into potential contexts that are meaningful to incarcerated college students to be incorporated into future computing curricula and interventions in prisons.},
	author = {Hogan, Emma},
	month = jan,
	year = {2024},
	html = {http://cseopenhouse.ucsd.edu/},
	poster = {Hogan_CSE_Research_Open_House_2024.pdf}
}

@presentation{hogan_challenges_2023,
	address = {Atlanta Georgia USA},
	type = {panel},
	html = {https://www.higheredinprison.org/info/2023-nchep-schedule},
	title = {Challenges and {Approaches} to {Teaching} {Computing} in {Prison}},
	abstract = {Computer science (CS), and STEM fields in general, historically exclude people from underserved communities, who are overrepresented in the prison population. In higher education programs in prison, offerings of STEM courses are often limited, posing unique challenges to providing the same educational quality as found on traditional college campuses. For CS courses, technology infrastructure and policies make it difficult for instructors to make essential tools – such as code interpreters where students can run code – available to students. This puts students in computing courses at an undeniable disadvantage, as so much of the learning process of writing code is by doing: running code, understanding the output, and adjusting based on any errors. While students do not have access to technological tools and software needed for their education, instructors will have difficulty closing the gap between incarcerated and non-incarcerated students’ success. During this talk, I will share my experience as a CS instructor in prison, and discuss the barriers to learning computing in prison settings. I will also discuss practical solutions I have found to be effective, as well as ideas I have planned for future iterations of this course.},
	author = {Hogan, Emma},
	month = nov,
	year = {2023},
}

@presentation{hogan_cs0_2023-1,
	address = {Toronto ON Canada},
	type = {paper presentation},
	html = {https://sigcse2023.sigcse.org/details/sigcse-ts-2023-papers/143/CS0-vs-CS1-Understanding-Fears-and-Confidence-amongst-Non-majors-in-Introductory-CS},
	slides = {slides CS0 vs. CS1_ SIGCSE 2023 Presentation.pdf},
	title = {{CS0} vs. {CS1}: {Understanding} {Fears} and {Confidence} amongst {Non}-majors in {Introductory} {CS} {Courses}},
	abstract = {Previous research has been devoted to improving the experience of non-majors in introductory CS courses. In this study, we compare the experiences of non-majors in two different introductory CS courses, specifically with respect to fears about taking the course and change in confidence levels. CS0 is a computing course intentionally designed for non-majors, and CS1 is a more traditional introductory computing course. Both of these courses were composed primarily of non-majors and were taught by the same instructor. Survey data was collected from 124 students enrolled in CS0, and 502 students enrolled in CS1. Through qualitative analysis, we found that the fears of non-major students entering both of these introductory CS courses fell into one or more of nine distinct categories (e.g., Coding, Perceiving STEM as Difficult, Managing Workload). Additionally, using students' confidence levels at the beginning and end of the courses, we found that students in CS0 had a greater increase in confidence level than those in CS1. Finally, we explored connections between students' fears and how their confidence changed by the end of the course. We found that students across both courses with fears related to coding, lack of preparation, and being left behind had the highest average increase in confidence levels.},
	author = {Hogan, Emma},
	month = mar,
	year = {2023},
}

@presentation{hogan_thrown_2021,
	type = {workshop},
	title = {Thrown {Away} in {Our} {Prison} {System}: {How} {Poor} {People} of {Color} with {Mental} {Illness} are {Ostracized}},
	author = {Hogan, Emma and Allen, Kevin and Kohn, Ari},
	month = oct,
	year = {2021},
	html = {https://kodxseattle.org/2022/03/03/post-prison-education-program-radio-show-03-03-22-2/}
}

@presentation{hogan_lesson_2020,
	address = {Pittsburgh, PA},
	type = {poster},
	title = {Lesson {Learned} for {Computer} {Security} {Teams} from {High}-{Performance} {CTF} {Teams}},
	author = {Hogan, Emma},
	month = sep,
	year = {2020},
	html = {https://www.cylab.cmu.edu/events/partners_conference/2020/index.html}
}

@inproceedings{hogan_accepted_2024,
	address = {Portland OR USA},
	title = {{(Accepted)} {Challenges} and {Approaches} to {Teaching} {CS1} in {Prison}},
	doi = {10.1145/3626252.3630802},
	pdf = {SIGCSE23_cs1_in_prison.pdf},
	abstract = {Efforts to bring incarcerated and formerly incarcerated individuals
into the field of computing stand to improve equitable access to
both computing jobs, and consequently the benefits of our tools and innovations through the inclusion of more diverse perspec-
tives. This report describes the design and execution of a college level introductory computing course conducted with 26 students currently incarcerated at a prison in the United States in Fall 2022. We discuss the ways that the prison environment and the student body differ from traditional college computing classes, and how this impacted the design and execution of the course. We found that despite significant environmental barriers to learning to program, such as not having access to a code interpreter, there were unique affordances of the student population, including maturity and community, that could be leveraged in the course design and policies. We conclude with many lessons learned for the purpose of improving future offerings of computing courses in prisons.},
	language = {en},
	booktitle = {Proceedings of the 55th {ACM} {Technical} {Symposium} on {Computer} {Science} {Education} {V}. 1},
	publisher = {ACM},
	author = {Hogan, Emma and Li, Ruoxuan and Soosai Raj, Adalbert Gerald and Porter, Leo and Griswold, William G.},
	month = mar,
	year = {2024},
}